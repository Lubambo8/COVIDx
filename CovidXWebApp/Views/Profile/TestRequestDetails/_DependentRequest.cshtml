@model TestRequestViewModel

@inject IPatientServices _patientService
@inject UserManager<EFCoreIdentityUser> _userManager

@{
    var user1 = _userManager.FindByEmailAsync(User.Identity.Name).Result;

    //// ...add that as a foreign key
    ////model.UserID = user.Id;

    ////find patient using USerID
    var patient = _patientService.FindPatientByUserID(user1.Id);
}

@section Scripts{
    <script src="~/plugins/select2/js/select2.full.min.js"></script>
    <script>
        $(function () {
            //Initialize Select2 Elements
            $('.select2').select2()

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })



    </script>

}

<!-- Multiple Select Dependent List -->
<!-- SELECT INPUT START -->
<div class="form-group">

    <!-- INPUT LABEL -->
    <label asp-for="SelectedDependentIds">Select Dependents</label>

    <!-- INPUT ITEM -->
    <select asp-for="SelectedDependentIds"
            asp-items="_patientService.GetDependentByPatientID(patient.PatientID)"
            class="selectpicker"
            data-width="100%"
            data-live-search="true"
            multiple
            data-max-options="5"
            title="Select dependent(s)">
    </select>

    <!-- INPUT VALIDATION MESSAGE -->
    <span asp-validation-for="SelectedDependentIds"
          style="display:inline" />
</div>

<div class="input-group mb-3">

    <!-- INPUT LABEL -->
    <label asp-for="DependentId">Dependent</label>
    <!-- INPUT ITEM -->
    <select asp-for="SuburbId"
            asp-items="_patientService.GetDependentByPatientID(patient.PatientID)"
            class="selectpicker"
            data-width="100%"
            data-live-search="true"
            title="Select a dependent">
    </select>

    <!-- INPUT VALIDATION MESSAGE -->
    <span asp-validation-for="DependentId"
          style="display:inline" />
</div>